buildscript {
    ext.safeExtGet = {prop ->
        rootProject.ext.has(prop) ? rootProject.ext.get(prop) : project.properties['argyle_plugin_rn_' + prop]
    }
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        // Matches recent template from React Native (0.60)
        // https://github.com/facebook/react-native/blob/0.60-stable/template/android/build.gradle#L16
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${safeExtGet('kotlinVersion')}"
        classpath "com.android.tools.build:gradle:${safeExtGet('gradlePluginVersion')}"
    }
}

apply plugin: 'com.android.library'

apply plugin: 'kotlin-android'

android {
  namespace = "com.reactlibrary"
  compileSdkVersion safeExtGet('compileSdkVersion')

  defaultConfig {
    minSdkVersion safeExtGet('minSdkVersion')
    targetSdkVersion safeExtGet('targetSdkVersion')
    versionCode 1
    versionName "1.0"
  }
  lintOptions {
    abortOnError false
  }
}

repositories {
    maven {
        // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
        // Matches recent template from React Native 0.59 / 0.60
        // https://github.com/facebook/react-native/blob/0.59-stable/template/android/build.gradle#L30
        // https://github.com/facebook/react-native/blob/0.60-stable/template/android/build.gradle#L28
        url "$projectDir/../node_modules/react-native/android"
    }
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${safeExtGet('kotlinVersion')}"
    implementation "com.facebook.react:react-native:${safeExtGet('reactnativeVersion')}"
    implementation 'com.argyle:argyle-link-android:5.15.1'
}

def configureReactNativePom(def pom) {
    def packageJson = new groovy.json.JsonSlurper().parseText(file('../package.json').text)

    pom.project {
        name packageJson.title
        artifactId packageJson.name
        version = packageJson.version
        group = "com.reactlibrary"
        description packageJson.description
        url packageJson.repository.baseUrl

        licenses {
            license {
                name packageJson.license
                url packageJson.repository.baseUrl + '/blob/master/' + packageJson.licenseFilename
                distribution 'repo'
            }
        }

        developers {
            developer {
                id packageJson.author.username
                name packageJson.author.name
            }
        }
    }
}
